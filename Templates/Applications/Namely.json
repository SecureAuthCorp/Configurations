{
  "id": "Namely",
  "title": "Namely",
  "version": "1.0.0",
  "__devOnly__": true,
  "icon": "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",
  "vars": {
    "encryptOptions": [
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes128",
        "display": "XmlEncAES128KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes128-cbc",
        "display": "XmlEncAES128Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes192",
        "display": "XmlEncAES192KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes192-cbc",
        "display": "XmlEncAES192Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes256",
        "display": "XmlEncAES256KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes256-cbc",
        "display": "XmlEncAES256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#des-cbc",
        "display": "XmlEncDESUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Content",
        "display": "XmlEncElementContentUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Element",
        "display": "XmlEncElementUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#EncryptedKey",
        "display": "XmlEncEncryptedKeyUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#",
        "display": "XmlEncNamespaceUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-1_5",
        "display": "XmlEncRSA15Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p",
        "display": "XmlEncRSAOAEPUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha256",
        "display": "XmlEncSHA256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha512",
        "display": "XmlEncSHA512Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-tripledes",
        "display": "XmlEncTripleDESKeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#tripledes-cbc",
        "display": "XmlEncTripleDESUrl"
      }
    ],
    "attributeFormatsList": [
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
        "display": "Basic"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
        "display": "URI"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
        "display": "Unspecified"
      },
      {
        "value": "Base64Encoded",
        "display": "Base64 Encoded"
      },
      {
        "value": "GroupList",
        "display": "Group List"
      }
    ]
  },
  "applicationType": "SAML",
  "templateName": "Namely",
  "entries": {
    "allowAllGroups": {
      "states": "Allow every group in your selected data stores to access this application.",
      "controlType": "switch",
      "defaultValue": false,
      "notify": {
        "allGroupsAllowed": true,
        "selectGroupsAllowed": false
      }
    },
    "applicationName": {
      "defaultValue:t": "$.title",
      "controlType": "input",
      "dataModelName": "name",
      "label": "Application Name",
      "stack": "medium",
      "emptyValue:t": "$.title"
    },
    "applicationDescription": {
      "controlType": "input",
      "dataModelName": "description",
      "label": "Application Description"
    },
    "applicationLogo": {
      "defaultValue:t": "$.icon",
      "displayOnly@summary": false,
      "controlType": "custom",
      "dataModelName": "logo",
      "componentId": "imageUpload",
      "stack": ":medium",
      "properties": {
        "maxFileSize": 2000,
        "allowedTypes": [
          "jpeg",
          "png"
        ]
      },
      "properties@summary": {
        "displayOnly": true,
        "isSquare": true
      },
      "order": [
        "downloadIcon",
        "downloadLabel"
      ]
    },
    "assertionConsumerService": {
      "label": "Assertion Consumer Service (ACS)",
      "controlType": "input",
      "hint": "https://<Company Id>.namely.com/saml/xxxx",
      "description": "This URL, provided by the service provider, is used to accept a SAML assertion"
    },
    "assertionOffsetMinutes": {
      "label": "Offset Minutes",
      "controlType": "input",
      "defaultValue": 5,
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionOffsetMinutesTooltip"
      ],
      "extrasAt": "field",
      "width": 3
    },
    "assertionValidHours": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Hours&nbsp;"
        }
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0",
      "modify": {
        "minutesAreZero": {
          "value": "1"
        }
      }
    },
    "assertionValidMinutes": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionValidHoursTooltip"
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0"
    },
    "attributeFormat": {
      "label": "Format",
      "dataModelName": "format",
      "controlType": "select",
      "options:t": "$.vars.attributeFormatsList"
    },
    "attributeFilterGroup": {
      "label": "Filtered Group",
      "controlType": "input",
      "dataModelName": "filterGroup"
    },
    "attributeName": {
      "label": "Attribute Name",
      "controlType": "input",
      "dataModelName": "name"
    },
    "attributeNamespace": {
      "label": "Namespace (1.1)",
      "controlType": "input",
      "dataModelName": "namespace"
    },
    "attributeNumber": {
      "controlType": "input",
      "visible": false,
      "dataModelName": "number"
    },
    "attributeProfileField": {
      "label": "Data Store Property",
      "controlType": "select",
      "dataModelName": "property",
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    },
    "audience": {
      "label": "Audience",
      "controlType": "input",
      "extras": "audienceTooltip",
      "extrasAt": "field"
    },
    "dataEncryptionMethod": {
      "label": "Data Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "options:t": "$.vars.encryptOptions"
    },
    "dataStores": {
      "controlType": "pills",
      "label": "Data Stores",
      "description": "Select the data stores for this application.  Only users in these data stores can access this application.",
      "description@summary": null,
      "extras": {
        "name": "other:importance",
        "pad": ":::small",
        "inline": true
      },
      "allowDuplicates": false,
      "stack": "medium",
      "width": 6,
      "source": "data:dataStores:dataStoreInputList",
      "validate": "is.required and is.notEmpty"
    },
    "dataStores@summary": {
      "extras": null
    },
    "encodeToBase64": {
      "controlType": "switch",
      "states": "Encode to Base64",
      "defaultValue": false
    },
    "encryptSamlAssertion": {
      "states": "Encrypt SAML Assertion",
      "controlType": "switch",
      "defaultValue": false,
      "modify": {
        "encryptSamlAssertionOff": {
          "order": null
        },
        "encryptSamlAssertionOn": {
          "order": "encryptSamlAssertionCallout"
        }
      },
      "notify": {
        "encryptSamlAssertionOff": false,
        "encryptSamlAssertionOn": true
      }
    },
    "groups": {
      "controlType": "pills",
      "label": "Groups",
      "description": "Only these groups will have access to this application.",
      "description@summary": null,
      "delimiter": "  ",
      "width": 6,
      "validate": "allowAllGroups:false and is.required and is.notEmpty or allowAllGroups:true",
      "modify": {
        "allGroupsAllowed": {
          "enabled": false,
          "extras": null
        },
        "selectGroupsAllowed": {
          "enabled": true,
          "extras": {
            "name": "other:importance",
            "pad": ":::small",
            "inline": true
          }
        }
      }
    },
    "groups@summary": {
      "modify": null,
      "extras": null
    },
    "issuer": {
      "label": "IdP Issuer",
      "controlType": "input",
      "hint": "sample-issuer",
      "description": "Also known as the IdP Entity ID. This is a unique string that identifies the IdP.",
      "description@providersInfo": null,
      "displayOnly@providersInfo": true,
      "stack@providersInfo": "medium",
      "noMargin@providersInfo": true
    },
    "initiationType": {
      "label": "Connection Type",
      "controlType": "select",
      "width": 7,
      "noMargin": true,
      "options": [
        {
          "value": "sp",
          "display": "SP Initiated"
        },
        {
          "value": "idp",
          "display": "IdP Initiated"
        }
      ],
      "notify": {
        "initiationTypeSP": "sp",
        "initiationTypeIdP": "idp"
      }
    },
    "initiationBy": {
      "controlType": "radiogroup",
      "fixeValueValue": "redirect",
      "noFieldset": true,
      "stack": "small",
      "properties": {
        "inline": true,
        "alignment": ":middle",
        "stack": ":medium"
      },
      "options": [
        {
          "value": "redirect",
          "display": "By Redirect"
        },
        {
          "value": "post",
          "display": "By Post",
          "extras": "initiationByTooltip"
        }
      ],
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "keyEncryptionMethod": {
      "label": "Key Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "noMargin": true,
      "options:t": "$.vars.encryptOptions"
    },
    "nameIdFormat": {
      "label": "Name ID Format",
      "controlType": "select",
      "defaultValue": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
      "width": 11,
      "options": [
        "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
      ]
    },
    "recipient": {
      "label": "Recipient",
      "controlType": "input"
    },
    "relayState": {
      "label": "Relay State",
      "controlType": "input",
      "description": "User will be directed to this URL after authentication",
      "extras": "relayStateTooltip",
      "extrasAt": "field"
    },
    "signingAlgorithm": {
      "label": "Signing Algorithm",
      "controlType": "radiogroup",
      "defaultValue": "SHA1",
      "noMargin": true,
      "properties": {
        "inline": true,
        "stack": "small:medium:small"
      },
      "options": [
        "SHA1",
        "SHA2"
      ]
    },
    "signingCert": {
      "controlType": "options",
      "defaultValue": {
        "issuedTo": "No Certificate Selected"
      },
      "width": 12,
      "emptyContent": "noCertificatesAvailable",
      "columns": [
        "issuedTo",
        "issuedBy",
        "expiresOn"
      ],
      "headers": [
        "Issued To",
        "Issued By",
        "Expires"
      ],
      "optionAsValue": true,
      "source": "options:applianceCertificates:certificateOptions"
    },
    "signSamlAssertion": {
      "states": "Sign SAML Assertion",
      "controlType": "switch",
      "defaultValue": false
    },
    "signSamlMessage": {
      "states": "Sign SAML Message",
      "controlType": "switch",
      "defaultValue": true
    },
    "spLoginUrl": {
      "label": "Namely Login URL",
      "controlType": "input",
      "extras": "spLoginUrlTooltip",
      "extrasAt": "field",
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "userIdProfileField": {
      "label": "User ID Profile Field",
      "controlType": "select",
      "description": "Select the profile field in your data store that contains your users' IDs.",
      "width": 7,
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    }
  },
  "statics": {
    "assertionOffsetMinutesTooltip": {
      "content": "This is referred to as \"SAML Not Before\" in the SAML Specification."
    },
    "assertionValidHoursTooltip": {
      "content": "This is the time period in which a SAML Assertion is valid. It is referred to as \"SAML Not After\" in the SAML Specification."
    },
    "attributeAddButton": {
      "content:n": "&nbsp;&nbsp;Add SAML Attribute",
      "before": "attributeAddIcon",
      "dashed": true,
      "expand": true,
      "clickAction": "attributeItemAdd",
      "modify": {
        "attributeItemDisableAdd": {
          "disabled": true
        },
        "attributeItemEnableAdd": {
          "disabled": false
        }
      },
      "stack": "::small"
    },
    "attributeAddIcon": {
      "icon": "add",
      "size": "medium"
    },
    "attributeCallout": {
      "after": [
        "attributeInfo",
        "attributeNamespace",
        "attributeFormat",
        "attributeFilterGroup"
      ],
      "stack": "::medium"
    },
    "attributeDeleteButton": {
      "content": " Delete Attribute",
      "before": {
        "name": "static:icon",
        "icon": "remove",
        "type": "destructive",
        "size": "medium"
      },
      "type": "destructive",
      "dashed": true
    },
    "attributesHeader": {
      "content": "SAML ATTRIBUTES",
      "small": true,
      "stack": "large"
    },
    "settingsCallout": {
      "after": [
        "applicationSettings"
      ]
    },
    "dataStoresAndGroupsHeader": {
      "content": "USER DATA STORES AND GROUPS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit groups",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "chevronIconRight": {
      "staticType": "icon",
      "icon": "chevron-right",
      "size": "medium",
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "connectionSettingsHeader": {
      "content": "CONNECTION SETTINGS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit connection",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "appSettingsHeader": {
      "content": "Application Settings",
      "stack": "large"
    },
    "nameForSummary": {
      "content:t": "_.name",
      "staticType": "headline",
      "stack": "small"
    },
    "descriptionForSummary": {
      "content:t": "_.description",
      "staticType": "color",
      "color": "disabled"
    },
    "audienceTooltip": {
      "content": "OPTIONAL CONTENT.",
      "pad": ":::small"
    },
    "encryptSamlAssertionCallout": {
      "after": "encryptSamlAssertionOptions",
      "stack": "small"
    },
    "defaultHeader": {
      "small": true,
      "stack": "large"
    },
    "downloadIcon": {
      "staticType": "icon",
      "icon": "upload",
      "size": "medium"
    },
    "downloadLabel": {
      "staticType": "text",
      "content": " Upload"
    },
    "editIcon": {
      "icon": "pencil",
      "size": "medium"
    },
    "idpSigningCertificateDownloadDesc": {
      "staticType": "color",
      "color": "disabled",
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "wrappers": "body",
      "pad": "small"
    },
    "idpSigningCertificateDownloadHeader": {
      "staticType": "label",
      "content": "Idp Signing Certificate"
    },
    "idpDownloadCertificateAction": {
      "staticType": "link",
      "content": " Download",
      "className": "sa-vertical-align-middle",
      "before": {
        "name": "static:icon",
        "icon": "download",
        "size": "small"
      },
      "clickAction": {
        "actions": "download certificate",
        "sendToParent": true
      }
    },
    "initiationByTooltip": {
      "content": "The SAML specification allows for SPs to send their authentication requests (AuthnRequest) to the IdP either by HTTP Post or HTTP Redirect. Your SP’s configuration or metadata will tell you what is used for the authentication request.",
      "inline": true,
      "width": "medium",
      "pad": ":::small"
    },
    "initiationTypeInfo": {
      "staticType": "fieldset",
      "content": " - ",
      "before": [
        "initiationTypeLabel",
        {
          "name": "initiationType",
          "noFieldset": true,
          "inline": true
        }
      ],
      "after": {
        "name": "initiationBy",
        "inline": true
      }
    },
    "initiationTypeLabel": {
      "content": "Connection Type"
    },
    "loginUrlLink": {
      "staticType": "link",
      "content:t": "_.loginURL",
      "href:t": "_.loginURL",
      "target": "_blank"
    },
    "providersCalloutLabel": {
      "staticType": "color",
      "content": "Info for service providers",
      "after": "chevronIconRight",
      "style": {
        "cursor": "pointer"
      },
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "providersCalloutHeader": {
      "staticType": "color",
      "color": "info",
      "after": [
        "providersCalloutLabel"
      ]
    },
    "providersCalloutDescription": {
      "content": "Idp URLs, certificates and metadata files used for integrating with Service Providers.",
      "staticType": "color"
    },
    "providersCallout": {
      "type": "info",
      "after": [
        "providersCalloutHeader",
        "providersCalloutDescription"
      ]
    },
    "recipientTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "relayStateTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "realmInfo": {
      "content:im": "**Realm:** Secureauth %{_.realmNumber}",
      "color": "disabled",
      "staticType": "color"
    },
    "settingsHeader": {
      "content": "CONFIGURE CONNECTION",
      "small": true,
      "stack": "large"
    },
    "signingCertAcceptButton": {
      "content": "Select",
      "clickAction": "signingCertModalAccept"
    },
    "signingCertLink": {
      "content:n": "Select&nbsp;Certificate",
      "clickAction": "signingCertModalOpen"
    },
    "signingCertName": {
      "content:in": "%{_.signingCertOptions.signingCert.issuedTo}&nbsp;&nbsp;&nbsp;",
      "staticType": "body",
      "after": "signingCertLink"
    },
    "signingCertNameFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate",
          "inline": true,
          "pad": ":small"
        },
        {
          "name": "other:importance",
          "inline": true
        },
        "signingCertName"
      ]
    },
    "signingCertSerialNo": {
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "staticType": "body"
    },
    "signingCertSerialNoFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate Serial Number"
        },
        "signingCertSerialNo",
        "signingCertCopy"
      ],
      "stack@providersInfo": "medium"
    },
    "spLoginUrlTooltip": {
      "content": "The URL for your users to log into your <APP NAME> instance.",
      "pad": ":::small"
    }
  },
  "layouts": {
    "applicationInputs": {
      "layoutType": "layout",
      "boxWidth": 6,
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "applicationInfo": [
          "applicationName",
          "applicationDescription"
        ]
      }
    },
    "applicationSettings": {
      "layoutType": "layout",
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "appSummary": [
          "nameForSummary",
          "descriptionForSummary",
          "loginUrlLink",
          "realmInfo"
        ],
        "edition": {
          "width": "auto",
          "order": [
            {
              "name": "editIcon",
              "clickAction": {
                "actions": "edit details",
                "sendToParent": true
              }
            }
          ]
        }
      }
    },
    "attributeInfo": {
      "layoutType": "grid",
      "columns": {
        "attributeProfile": {
          "small": 8,
          "order": [
            "attributeNumber",
            "attributeName",
            "attributeProfileField"
          ]
        },
        "attributeActions": {
          "align": "right",
          "order": "attributeDeleteTooltipConfirm"
        }
      }
    }
  },
  "others": {
    "attributeDeleteTooltipConfirm": {
      "trigger": "attributeDeleteButton",
      "message": "Are you sure you want to delete this attribute?",
      "action:i": "attributeItemDelete%{local.name}",
      "placement": "top-end"
    },
    "idpIssuerCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.issuer",
      "stack": "medium"
    },
    "loginUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.loginURL"
    },
    "logoutUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.logoutURL"
    },
    "noCertificatesAvailable": {
      "otherType": "statemessage",
      "message": "There are no certificates available on the SecureAuth appliance.",
      "info": "Certificates must be managed and uploaded using the Windows Certificates Console on this appliance."
    },
    "noSAMLAttributes": {
      "otherType": "statemessage",
      "message": "Add SAML Attributes for your connection",
      "modify": {
        "attributeItemEmpty": {
          "visible": true
        },
        "attributeItemNotEmpty": {
          "visible": false
        }
      }
    },
    "signingCertCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.signingCertOptions.signingCert.serialNo"
    }
  },
  "windows": {
    "signingCertModal": {
      "title": "Select Certificate",
      "body": "signingCert",
      "footer": "signingCertAcceptButton",
      "closeButton": "Cancel",
      "size": "large",
      "modify": {
        "signingCertModalAccept": {
          "isOpened": false
        },
        "signingCertModalClose": {
          "isOpened": false
        },
        "signingCertModalOpen": {
          "isOpened": true
        }
      }
    }
  },
  "validation": {
    "requireSigningCert": {
      "constrain": {
        "signingCert": "is.required"
      },
      "nested": {
        "signingCert": {
          "constrain": {
            "serialNo": "is.required"
          }
        }
      }
    }
  },
  "groups": {
    "attributeItem": {
      "logical": true,
      "dataModelName": "attributes",
      "repeat": {
        "max": 10
      },
      "order": "attributeCallout"
    },
    "encryptSamlAssertionOptions": {
      "logical": true,
      "order": [
        "dataEncryptionMethod",
        "keyEncryptionMethod"
      ]
    },
    "assertionWillBeValid": {
      "inline": true,
      "order": [
        {
          "name": "static:label",
          "content": "Assertion will be valid for:"
        },
        "assertionValidHours",
        "assertionValidMinutes"
      ],
      "notify": {
        "minutesAreZero": {
          "value.assertionValidMinutes": "0",
          "value.assertionValidHours": "0"
        }
      }
    },
    "providerUrls": {
      "logical": true,
      "order": [
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Login URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.loginURL"
          }
        },
        "loginUrlCopy",
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Logout URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.logoutURL"
          }
        },
        "logoutUrlCopy"
      ]
    },
    "signSamlElements": {
      "order": [
        "signSamlAssertion",
        "signSamlMessage"
      ]
    },
    "signingCertDownload": {
      "order": [
        "idpSigningCertificateDownloadHeader",
        "idpSigningCertificateDownloadDesc",
        "idpDownloadCertificateAction"
      ],
      "stack": "medium"
    },
    "signingCertOptions": {
      "logical": true,
      "order": [
        "signingCertModal",
        {
          "name": "signingCert",
          "holdValue": "signingCertModalOpen:signingCertModalClose",
          "visible": false
        },
        "signingCertNameFieldset",
        "signingCertSerialNoFieldset",
        "signingAlgorithm"
      ],
      "pad": "::small",
      "validate": "requireSigningCert"
    },
    "templateRoot": {
      "order": [
        "settingsHeader",
        "initiationType",
        "initiationBy",
        {
          "name": "defaultHeader",
          "content": "USER ID MAPPING"
        },
        "userIdProfileField",
        "nameIdFormat",
        "encodeToBase64",
        {
          "name": "defaultHeader",
          "content": "SAML ASSERTION"
        },
        "issuer",
        "assertionConsumerService",
        "relayState",
        "recipient",
        "audience",
        "spLoginUrl",
        "assertionWillBeValid",
        "assertionOffsetMinutes",
        "signingCertOptions",
        "signSamlElements",
        "encryptSamlAssertion",
        "attributesHeader",
        "noSAMLAttributes",
        "attributeAddButton",
        "attributeItem"
      ],
      "order@details": [
        "applicationInputs",
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@summary": [
        "settingsCallout",
        "appSettingsHeader",
        "dataStoresAndGroupsHeader",
        "dataStores",
        "groups",
        "connectionSettingsHeader",
        "initiationTypeInfo",
        "providersCallout"
      ],
      "order@providersInfo": [
        "providerUrls",
        "issuer",
        "idpIssuerCopy",
        "signingCertDownload"
      ],
      "order@updateGroups": [
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@updateDetails": [
        "applicationInputs"
      ]
    }
  },
  "views": {
    "summary": {
      "entries": {
        "displayOnly": true
      }
    }
  },
  "order": [
    "templateRoot"
  ]
}
