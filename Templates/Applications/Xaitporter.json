{
  "id": "XaitPorter",
  "title": "XaitPorter",
  "version": "1.0.0",
  "__devOnly__": true,
  "icon": "",
  "vars": {
    "encryptOptions": [
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes128",
        "display": "XmlEncAES128KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes128-cbc",
        "display": "XmlEncAES128Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes192",
        "display": "XmlEncAES192KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes192-cbc",
        "display": "XmlEncAES192Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes256",
        "display": "XmlEncAES256KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes256-cbc",
        "display": "XmlEncAES256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#des-cbc",
        "display": "XmlEncDESUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Content",
        "display": "XmlEncElementContentUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Element",
        "display": "XmlEncElementUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#EncryptedKey",
        "display": "XmlEncEncryptedKeyUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#",
        "display": "XmlEncNamespaceUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-1_5",
        "display": "XmlEncRSA15Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p",
        "display": "XmlEncRSAOAEPUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha256",
        "display": "XmlEncSHA256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha512",
        "display": "XmlEncSHA512Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-tripledes",
        "display": "XmlEncTripleDESKeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#tripledes-cbc",
        "display": "XmlEncTripleDESUrl"
      }
    ],
    "attributeFormatsList": [
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
        "display": "Basic"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
        "display": "URI"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
        "display": "Unspecified"
      },
      {
        "value": "Base64Encoded",
        "display": "Base64 Encoded"
      },
      {
        "value": "GroupList",
        "display": "Group List"
      }
    ]
  },
  "applicationType": "SAML",
  "templateName": "XaitPorter",
  "entries": {
    "allowAllGroups": {
      "states": "Allow every group in your selected data stores to access this application.",
      "controlType": "switch",
      "defaultValue": false,
      "notify": {
        "allGroupsAllowed": true,
        "selectGroupsAllowed": false
      }
    },
    "applicationName": {
      "defaultValue:t": "$.title",
      "controlType": "input",
      "dataModelName": "name",
      "label": "Application Name",
      "stack": "medium",
      "emptyValue:t": "$.title"
    },
    "applicationDescription": {
      "controlType": "input",
      "dataModelName": "description",
      "label": "Application Description"
    },
    "applicationLogo": {
      "defaultValue:t": "$.icon",
      "displayOnly@summary": false,
      "controlType": "custom",
      "dataModelName": "logo",
      "componentId": "imageUpload",
      "stack": ":medium",
      "properties": {
        "maxFileSize": 2000,
        "allowedTypes": [
          "jpeg",
          "png"
        ]
      },
      "properties@summary": {
        "displayOnly": true,
        "isSquare": true
      },
      "order": [
        "downloadIcon",
        "downloadLabel"
      ]
    },
    "assertionConsumerService": {
      "label": "Assertion Consumer Service (ACS)",
      "controlType": "input",
      "hint": "https://<companyId>.xaitporter.com/saml/consumer"
    },
    "assertionOffsetMinutes": {
      "label": "Offset Minutes",
      "controlType": "input",
      "defaultValue": 5,
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionOffsetMinutesTooltip"
      ],
      "extrasAt": "field",
      "width": 3
    },
    "assertionValidHours": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Hours&nbsp;"
        }
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0",
      "modify": {
        "minutesAreZero": {
          "value": "1"
        }
      }
    },
    "assertionValidMinutes": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionValidHoursTooltip"
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0"
    },
    "attributeFormat": {
      "label": "Format",
      "dataModelName": "format",
      "controlType": "select",
      "options:t": "$.vars.attributeFormatsList"
    },
    "attributeFilterGroup": {
      "label": "Filtered Group",
      "controlType": "input",
      "dataModelName": "filterGroup"
    },
    "attributeName": {
      "label": "Attribute Name",
      "controlType": "input",
      "dataModelName": "name"
    },
    "attributeNamespace": {
      "label": "Namespace (1.1)",
      "controlType": "input",
      "dataModelName": "namespace"
    },
    "attributeNumber": {
      "controlType": "input",
      "visible": false,
      "dataModelName": "number"
    },
    "attributeProfileField": {
      "label": "Data Store Property",
      "controlType": "select",
      "dataModelName": "property",
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    },
    "audience": {
      "label": "Audience",
      "controlType": "input"
    },
    "dataEncryptionMethod": {
      "label": "Data Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "options:t": "$.vars.encryptOptions"
    },
    "dataStores": {
      "controlType": "pills",
      "label": "Data Stores",
      "description": "Select the data stores for this application.  Only users in these data stores can access this application.",
      "description@summary": null,
      "extras": {
        "name": "other:importance",
        "pad": ":::small",
        "inline": true
      },
      "allowDuplicates": false,
      "stack": "medium",
      "width": 6,
      "source": "data:dataStores:dataStoreInputList",
      "validate": "is.required and is.notEmpty"
    },
    "dataStores@summary": {
      "extras": null
    },
    "encodeToBase64": {
      "controlType": "switch",
      "states": "Encode to Base64",
      "defaultValue": false
    },
    "encryptSamlAssertion": {
      "states": "Encrypt SAML Assertion",
      "controlType": "switch",
      "defaultValue": false,
      "modify": {
        "encryptSamlAssertionOff": {
          "order": null
        },
        "encryptSamlAssertionOn": {
          "order": "encryptSamlAssertionCallout"
        }
      },
      "notify": {
        "encryptSamlAssertionOff": false,
        "encryptSamlAssertionOn": true
      }
    },
    "groups": {
      "controlType": "pills",
      "label": "Groups",
      "description": "Only these groups will have access to this application.",
      "description@summary": null,
      "delimiter": "  ",
      "width": 6,
      "validate": "allowAllGroups:false and is.required and is.notEmpty or allowAllGroups:true",
      "modify": {
        "allGroupsAllowed": {
          "enabled": false,
          "extras": null
        },
        "selectGroupsAllowed": {
          "enabled": true,
          "extras": {
            "name": "other:importance",
            "pad": ":::small",
            "inline": true
          }
        }
      }
    },
    "groups@summary": {
      "modify": null,
      "extras": null
    },
    "issuer": {
      "label": "IdP Issuer",
      "controlType": "input",
      "hint": "sample-issuer",
      "description": "Also known as the IdP Entity ID. This is a unique string that identifies the IdP.",
      "description@providersInfo": null,
      "displayOnly@providersInfo": true,
      "stack@providersInfo": "medium",
      "noMargin@providersInfo": true
    },
    "initiationType": {
      "label": "Connection Type",
      "controlType": "select",
      "defaultValue": "sp",
      "width": 7,
      "noMargin": true,
      "options": [
        {
          "value": "sp",
          "display": "SP Initiated"
        },
        {
          "value": "idp",
          "display": "IdP Initiated"
        }
      ],
      "notify": {
        "initiationTypeSP": "sp",
        "initiationTypeIdP": "idp"
      }
    },
    "initiationBy": {
      "controlType": "radiogroup",
      "defaultValue": "redirect",
      "noFieldset": true,
      "stack": "small",
      "properties": {
        "inline": true,
        "alignment": ":middle",
        "stack": ":medium"
      },
      "options": [
        {
          "value": "redirect",
          "display": "By Redirect"
        },
        {
          "value": "post",
          "display": "By Post",
          "extras": "initiationByTooltip"
        }
      ],
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "keyEncryptionMethod": {
      "label": "Key Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "noMargin": true,
      "options:t": "$.vars.encryptOptions"
    },
    "nameIdFormat": {
      "label": "Name ID Format",
      "controlType": "select",
      "defaultValue": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
      "width": 11,
      "options": [
        "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
      ]
    },
    "recipient": {
      "label": "Recipient",
      "controlType": "input"
    },
    "relayState": {
      "label": "Relay State",
      "controlType": "input"
    },
    "signingAlgorithm": {
      "label": "Signing Algorithm",
      "controlType": "radiogroup",
      "defaultValue": "SHA1",
      "noMargin": true,
      "properties": {
        "inline": true,
        "stack": "small:medium:small"
      },
      "options": [
        "SHA1",
        "SHA2"
      ]
    },
    "signingCert": {
      "controlType": "options",
      "defaultValue": {
        "issuedTo": "No Certificate Selected"
      },
      "width": 12,
      "emptyContent": "noCertificatesAvailable",
      "columns": [
        "issuedTo",
        "issuedBy",
        "expiresOn"
      ],
      "headers": [
        "Issued To",
        "Issued By",
        "Expires"
      ],
      "optionAsValue": true,
      "source": "options:applianceCertificates:certificateOptions"
    },
    "signSamlAssertion": {
      "states": "Sign SAML Assertion",
      "controlType": "switch",
      "defaultValue": false
    },
    "signSamlMessage": {
      "states": "Sign SAML Message",
      "controlType": "switch",
      "defaultValue": true
    },
    "spLoginUrl": {
      "label": "XaitPorter Login URL",
      "controlType": "input",
      "extras": "spLoginUrlTooltip",
      "extrasAt": "field",
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "userIdProfileField": {
      "label": "User ID Profile Field",
      "controlType": "select",
      "description": "Select the profile field in your data store that contains your users' IDs.",
      "width": 7,
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    }
  },
  "statics": {
    "assertionOffsetMinutesTooltip": {
      "content": "This is referred to as \"SAML Not Before\" in the SAML Specification."
    },
    "assertionValidHoursTooltip": {
      "content": "This is the time period in which a SAML Assertion is valid. It is referred to as \"SAML Not After\" in the SAML Specification."
    },
    "attributeAddButton": {
      "content:n": "&nbsp;&nbsp;Add SAML Attribute",
      "before": "attributeAddIcon",
      "dashed": true,
      "expand": true,
      "clickAction": "attributeItemAdd",
      "modify": {
        "attributeItemDisableAdd": {
          "disabled": true
        },
        "attributeItemEnableAdd": {
          "disabled": false
        }
      },
      "stack": "::small"
    },
    "attributeAddIcon": {
      "icon": "add",
      "size": "medium"
    },
    "attributeCallout": {
      "after": [
        "attributeInfo",
        "attributeNamespace",
        "attributeFormat",
        "attributeFilterGroup"
      ],
      "stack": "::medium"
    },
    "attributeDeleteButton": {
      "content": " Delete Attribute",
      "before": {
        "name": "static:icon",
        "icon": "remove",
        "type": "destructive",
        "size": "medium"
      },
      "type": "destructive",
      "dashed": true
    },
    "attributesHeader": {
      "content": "SAML ATTRIBUTES",
      "small": true,
      "stack": "large"
    },
    "settingsCallout": {
      "after": [
        "applicationSettings"
      ]
    },
    "dataStoresAndGroupsHeader": {
      "content": "USER DATA STORES AND GROUPS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit groups",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "chevronIconRight": {
      "staticType": "icon",
      "icon": "chevron-right",
      "size": "medium",
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "connectionSettingsHeader": {
      "content": "CONNECTION SETTINGS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit connection",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "appSettingsHeader": {
      "content": "Application Settings",
      "stack": "large"
    },
    "nameForSummary": {
      "content:t": "_.name",
      "staticType": "headline",
      "stack": "small"
    },
    "descriptionForSummary": {
      "content:t": "_.description",
      "staticType": "color",
      "color": "disabled"
    },
    "audienceTooltip": {
      "content": "OPTIONAL CONTENT.",
      "pad": ":::small"
    },
    "encryptSamlAssertionCallout": {
      "after": "encryptSamlAssertionOptions",
      "stack": "small"
    },
    "defaultHeader": {
      "small": true,
      "stack": "large"
    },
    "downloadIcon": {
      "staticType": "icon",
      "icon": "upload",
      "size": "medium"
    },
    "downloadLabel": {
      "staticType": "text",
      "content": " Upload"
    },
    "editIcon": {
      "icon": "pencil",
      "size": "medium"
    },
    "idpSigningCertificateDownloadDesc": {
      "staticType": "color",
      "color": "disabled",
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "wrappers": "body",
      "pad": "small"
    },
    "idpSigningCertificateDownloadHeader": {
      "staticType": "label",
      "content": "Idp Signing Certificate"
    },
    "idpDownloadCertificateAction": {
      "staticType": "link",
      "content": " Download",
      "className": "sa-vertical-align-middle",
      "before": {
        "name": "static:icon",
        "icon": "download",
        "size": "small"
      },
      "clickAction": {
        "actions": "download certificate",
        "sendToParent": true
      }
    },
    "initiationByTooltip": {
      "content": "The SAML specification allows for SPs to send their authentication requests (AuthnRequest) to the IdP either by HTTP Post or HTTP Redirect. Your SP’s configuration or metadata will tell you what is used for the authentication request.",
      "inline": true,
      "width": "medium",
      "pad": ":::small"
    },
    "initiationTypeInfo": {
      "staticType": "fieldset",
      "content": " - ",
      "before": [
        "initiationTypeLabel",
        {
          "name": "initiationType",
          "noFieldset": true,
          "inline": true
        }
      ],
      "after": {
        "name": "initiationBy",
        "inline": true
      }
    },
    "initiationTypeLabel": {
      "content": "Connection Type"
    },
    "loginUrlLink": {
      "staticType": "link",
      "content:t": "_.loginURL",
      "href:t": "_.loginURL",
      "target": "_blank"
    },
    "providersCalloutLabel": {
      "staticType": "color",
      "content": "Info for service providers",
      "after": "chevronIconRight",
      "style": {
        "cursor": "pointer"
      },
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "providersCalloutHeader": {
      "staticType": "color",
      "color": "info",
      "after": [
        "providersCalloutLabel"
      ]
    },
    "providersCalloutDescription": {
      "content": "Idp URLs, certificates and metadata files used for integrating with Service Providers.",
      "staticType": "color"
    },
    "providersCallout": {
      "type": "info",
      "after": [
        "providersCalloutHeader",
        "providersCalloutDescription"
      ]
    },
    "recipientTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "relayStateTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "realmInfo": {
      "content:im": "**Realm:** Secureauth %{_.realmNumber}",
      "color": "disabled",
      "staticType": "color"
    },
    "settingsHeader": {
      "content": "CONFIGURE CONNECTION",
      "small": true,
      "stack": "large"
    },
    "signingCertAcceptButton": {
      "content": "Select",
      "clickAction": "signingCertModalAccept"
    },
    "signingCertLink": {
      "content:n": "Select&nbsp;Certificate",
      "clickAction": "signingCertModalOpen"
    },
    "signingCertName": {
      "content:in": "%{_.signingCertOptions.signingCert.issuedTo}&nbsp;&nbsp;&nbsp;",
      "staticType": "body",
      "after": "signingCertLink"
    },
    "signingCertNameFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate",
          "inline": true,
          "pad": ":small"
        },
        {
          "name": "other:importance",
          "inline": true
        },
        "signingCertName"
      ]
    },
    "signingCertSerialNo": {
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "staticType": "body"
    },
    "signingCertSerialNoFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate Serial Number"
        },
        "signingCertSerialNo",
        "signingCertCopy"
      ],
      "stack@providersInfo": "medium"
    },
    "spLoginUrlTooltip": {
      "content": "The URL for your users to log into your <APP NAME> instance.",
      "pad": ":::small"
    }
  },
  "layouts": {
    "applicationInputs": {
      "layoutType": "layout",
      "boxWidth": 6,
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "applicationInfo": [
          "applicationName",
          "applicationDescription"
        ]
      }
    },
    "applicationSettings": {
      "layoutType": "layout",
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "appSummary": [
          "nameForSummary",
          "descriptionForSummary",
          "loginUrlLink",
          "realmInfo"
        ],
        "edition": {
          "width": "auto",
          "order": [
            {
              "name": "editIcon",
              "clickAction": {
                "actions": "edit details",
                "sendToParent": true
              }
            }
          ]
        }
      }
    },
    "attributeInfo": {
      "layoutType": "grid",
      "columns": {
        "attributeProfile": {
          "small": 8,
          "order": [
            "attributeNumber",
            "attributeName",
            "attributeProfileField"
          ]
        },
        "attributeActions": {
          "align": "right",
          "order": "attributeDeleteTooltipConfirm"
        }
      }
    }
  },
  "others": {
    "attributeDeleteTooltipConfirm": {
      "trigger": "attributeDeleteButton",
      "message": "Are you sure you want to delete this attribute?",
      "action:i": "attributeItemDelete%{local.name}",
      "placement": "top-end"
    },
    "idpIssuerCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.issuer",
      "stack": "medium"
    },
    "loginUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.loginURL"
    },
    "logoutUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.logoutURL"
    },
    "noCertificatesAvailable": {
      "otherType": "statemessage",
      "message": "There are no certificates available on the SecureAuth appliance.",
      "info": "Certificates must be managed and uploaded using the Windows Certificates Console on this appliance."
    },
    "noSAMLAttributes": {
      "otherType": "statemessage",
      "message": "Add SAML Attributes for your connection",
      "modify": {
        "attributeItemEmpty": {
          "visible": true
        },
        "attributeItemNotEmpty": {
          "visible": false
        }
      }
    },
    "signingCertCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.signingCertOptions.signingCert.serialNo"
    }
  },
  "windows": {
    "signingCertModal": {
      "title": "Select Certificate",
      "body": "signingCert",
      "footer": "signingCertAcceptButton",
      "closeButton": "Cancel",
      "size": "large",
      "modify": {
        "signingCertModalAccept": {
          "isOpened": false
        },
        "signingCertModalClose": {
          "isOpened": false
        },
        "signingCertModalOpen": {
          "isOpened": true
        }
      }
    }
  },
  "validation": {
    "requireSigningCert": {
      "constrain": {
        "signingCert": "is.required"
      },
      "nested": {
        "signingCert": {
          "constrain": {
            "serialNo": "is.required"
          }
        }
      }
    }
  },
  "groups": {
    "attributeItem": {
      "logical": true,
      "dataModelName": "attributes",
      "repeat": {
        "min": 1,
        "max": 10,
        "name": "mail"
      },
      "order": "attributeCallout"
    },
    "encryptSamlAssertionOptions": {
      "logical": true,
      "order": [
        "dataEncryptionMethod",
        "keyEncryptionMethod"
      ]
    },
    "assertionWillBeValid": {
      "inline": true,
      "order": [
        {
          "name": "static:label",
          "content": "Assertion will be valid for:"
        },
        "assertionValidHours",
        "assertionValidMinutes"
      ],
      "notify": {
        "minutesAreZero": {
          "value.assertionValidMinutes": "0",
          "value.assertionValidHours": "0"
        }
      }
    },
    "providerUrls": {
      "logical": true,
      "order": [
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Login URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.loginURL"
          }
        },
        "loginUrlCopy",
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Logout URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.logoutURL"
          }
        },
        "logoutUrlCopy"
      ]
    },
    "signSamlElements": {
      "order": [
        "signSamlAssertion",
        "signSamlMessage"
      ]
    },
    "signingCertDownload": {
      "order": [
        "idpSigningCertificateDownloadHeader",
        "idpSigningCertificateDownloadDesc",
        "idpDownloadCertificateAction"
      ],
      "stack": "medium"
    },
    "signingCertOptions": {
      "logical": true,
      "order": [
        "signingCertModal",
        {
          "name": "signingCert",
          "holdValue": "signingCertModalOpen:signingCertModalClose",
          "visible": false
        },
        "signingCertNameFieldset",
        "signingCertSerialNoFieldset",
        "signingAlgorithm"
      ],
      "pad": "::small",
      "validate": "requireSigningCert"
    },
    "templateRoot": {
      "order": [
        "settingsHeader",
        "initiationType",
        "initiationBy",
        {
          "name": "defaultHeader",
          "content": "USER ID MAPPING"
        },
        "userIdProfileField",
        "nameIdFormat",
        "encodeToBase64",
        {
          "name": "defaultHeader",
          "content": "SAML ASSERTION"
        },
        "issuer",
        "assertionConsumerService",
        "relayState",
        "recipient",
        "audience",
        "spLoginUrl",
        "assertionWillBeValid",
        "assertionOffsetMinutes",
        "signingCertOptions",
        "signSamlElements",
        "encryptSamlAssertion",
        "attributesHeader",
        "noSAMLAttributes",
        "attributeAddButton",
        "attributeItem"
      ],
      "order@details": [
        "applicationInputs",
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@summary": [
        "settingsCallout",
        "appSettingsHeader",
        "dataStoresAndGroupsHeader",
        "dataStores",
        "groups",
        "connectionSettingsHeader",
        "initiationTypeInfo",
        "providersCallout"
      ],
      "order@providersInfo": [
        "providerUrls",
        "issuer",
        "idpIssuerCopy",
        "signingCertDownload"
      ],
      "order@updateGroups": [
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@updateDetails": [
        "applicationInputs"
      ]
    }
  },
  "views": {
    "summary": {
      "entries": {
        "displayOnly": true
      }
    }
  },
  "order": [
    "templateRoot"
  ]
}
