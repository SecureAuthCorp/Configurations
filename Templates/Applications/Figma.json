{
  "id": "Figma",
  "title": "Figma",
  "version": "1.0.0",
  "__devOnly__": true,
  "icon": "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",
  "vars": {
    "encryptOptions": [
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes128",
        "display": "XmlEncAES128KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes128-cbc",
        "display": "XmlEncAES128Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes192",
        "display": "XmlEncAES192KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes192-cbc",
        "display": "XmlEncAES192Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes256",
        "display": "XmlEncAES256KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes256-cbc",
        "display": "XmlEncAES256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#des-cbc",
        "display": "XmlEncDESUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Content",
        "display": "XmlEncElementContentUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Element",
        "display": "XmlEncElementUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#EncryptedKey",
        "display": "XmlEncEncryptedKeyUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#",
        "display": "XmlEncNamespaceUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-1_5",
        "display": "XmlEncRSA15Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p",
        "display": "XmlEncRSAOAEPUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha256",
        "display": "XmlEncSHA256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha512",
        "display": "XmlEncSHA512Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-tripledes",
        "display": "XmlEncTripleDESKeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#tripledes-cbc",
        "display": "XmlEncTripleDESUrl"
      }
    ],
    "attributeFormatsList": [
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
        "display": "Basic"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
        "display": "URI"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
        "display": "Unspecified"
      },
      {
        "value": "Base64Encoded",
        "display": "Base64 Encoded"
      },
      {
        "value": "GroupList",
        "display": "Group List"
      }
    ]
  },
  "applicationType": "SAML",
  "templateName": "Figma",
  "entries": {
    "allowAllGroups": {
      "states": "Allow every group in your selected data stores to access this application.",
      "controlType": "switch",
      "defaultValue": false,
      "notify": {
        "allGroupsAllowed": true,
        "selectGroupsAllowed": false
      }
    },
    "applicationName": {
      "defaultValue:t": "$.title",
      "controlType": "input",
      "dataModelName": "name",
      "label": "Application Name",
      "stack": "medium",
      "emptyValue:t": "$.title"
    },
    "applicationDescription": {
      "controlType": "input",
      "dataModelName": "description",
      "label": "Application Description"
    },
    "applicationLogo": {
      "defaultValue:t": "$.icon",
      "displayOnly@summary": false,
      "controlType": "custom",
      "dataModelName": "logo",
      "componentId": "imageUpload",
      "stack": ":medium",
      "properties": {
        "maxFileSize": 2000,
        "allowedTypes": [
          "jpeg",
          "png"
        ]
      },
      "properties@summary": {
        "displayOnly": true,
        "isSquare": true
      },
      "order": [
        "downloadIcon",
        "downloadLabel"
      ]
    },
    "assertionConsumerService": {
      "label": "Assertion Consumer Service (ACS)",
      "controlType": "input",
      "hint": "https://figma.com/saml/<CompanyID>/consume"
    },
    "assertionOffsetMinutes": {
      "label": "Offset Minutes",
      "controlType": "input",
      "defaultValue": 5,
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionOffsetMinutesTooltip"
      ],
      "extrasAt": "field",
      "width": 3
    },
    "assertionValidHours": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Hours&nbsp;"
        }
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0",
      "modify": {
        "minutesAreZero": {
          "value": "1"
        }
      }
    },
    "assertionValidMinutes": {
      "controlType": "input",
      "type": "number",
      "extras": [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionValidHoursTooltip"
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0"
    },
    "attributeFormat": {
      "label": "Format",
      "dataModelName": "format",
      "controlType": "select",
      "options:t": "$.vars.attributeFormatsList"
    },
    "attributeFilterGroup": {
      "label": "Filtered Group",
      "controlType": "input",
      "dataModelName": "filterGroup"
    },
    "attributeName": {
      "label": "Attribute Name",
      "controlType": "input",
      "dataModelName": "name"
    },
    "attributeNamespace": {
      "label": "Namespace (1.1)",
      "controlType": "input",
      "dataModelName": "namespace"
    },
    "attributeNumber": {
      "controlType": "input",
      "visible": false,
      "dataModelName": "number"
    },
    "attributeProfileField": {
      "label": "Data Store Property",
      "controlType": "select",
      "dataModelName": "property",
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    },
    "audience": {
      "label": "Audience",
      "controlType": "input"
    },
    "dataEncryptionMethod": {
      "label": "Data Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "options:t": "$.vars.encryptOptions"
    },
    "dataStores": {
      "controlType": "pills",
      "label": "Data Stores",
      "description": "Select the data stores for this application.  Only users in these data stores can access this application.",
      "description@summary": null,
      "extras": {
        "name": "other:importance",
        "pad": ":::small",
        "inline": true
      },
      "allowDuplicates": false,
      "stack": "medium",
      "width": 6,
      "source": "data:dataStores:dataStoreInputList",
      "validate": "is.required and is.notEmpty"
    },
    "dataStores@summary": {
      "extras": null
    },
    "encodeToBase64": {
      "controlType": "switch",
      "states": "Encode to Base64",
      "defaultValue": false
    },
    "encryptSamlAssertion": {
      "states": "Encrypt SAML Assertion",
      "controlType": "switch",
      "defaultValue": false,
      "modify": {
        "encryptSamlAssertionOff": {
          "order": null
        },
        "encryptSamlAssertionOn": {
          "order": "encryptSamlAssertionCallout"
        }
      },
      "notify": {
        "encryptSamlAssertionOff": false,
        "encryptSamlAssertionOn": true
      }
    },
    "groups": {
      "controlType": "pills",
      "label": "Groups",
      "description": "Only these groups will have access to this application.",
      "description@summary": null,
      "delimiter": "  ",
      "width": 6,
      "validate": "allowAllGroups:false and is.required and is.notEmpty or allowAllGroups:true",
      "modify": {
        "allGroupsAllowed": {
          "enabled": false,
          "extras": null
        },
        "selectGroupsAllowed": {
          "enabled": true,
          "extras": {
            "name": "other:importance",
            "pad": ":::small",
            "inline": true
          }
        }
      }
    },
    "groups@summary": {
      "modify": null,
      "extras": null
    },
    "issuer": {
      "label": "IdP Issuer",
      "controlType": "input",
      "hint": "sample-issuer",
      "description": "Also known as the IdP Entity ID. This is a unique string that identifies the IdP.",
      "description@providersInfo": null,
      "displayOnly@providersInfo": true,
      "stack@providersInfo": "medium",
      "noMargin@providersInfo": true
    },
    "initiationType": {
      "label": "Connection Type",
      "controlType": "select",
      "defaultValue": "sp",
      "width": 7,
      "noMargin": true,
      "options": [
        {
          "value": "sp",
          "display": "SP Initiated"
        },
        {
          "value": "idp",
          "display": "IdP Initiated"
        }
      ],
      "notify": {
        "initiationTypeSP": "sp",
        "initiationTypeIdP": "idp"
      }
    },
    "initiationBy": {
      "controlType": "radiogroup",
      "defaultValue": "redirect",
      "noFieldset": true,
      "stack": "small",
      "properties": {
        "inline": true,
        "alignment": ":middle",
        "stack": ":medium"
      },
      "options": [
        {
          "value": "redirect",
          "display": "By Redirect"
        },
        {
          "value": "post",
          "display": "By Post",
          "extras": "initiationByTooltip"
        }
      ],
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "keyEncryptionMethod": {
      "label": "Key Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "noMargin": true,
      "options:t": "$.vars.encryptOptions"
    },
    "nameIdFormat": {
      "label": "Name ID Format",
      "controlType": "select",
      "defaultValue": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
      "width": 11,
      "options": [
        "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
      ]
    },
    "recipient": {
      "label": "Recipient",
      "controlType": "input"
    },
    "relayState": {
      "label": "Relay State",
      "controlType": "input"
    },
    "signingAlgorithm": {
      "label": "Signing Algorithm",
      "controlType": "radiogroup",
      "defaultValue": "SHA1",
      "noMargin": true,
      "properties": {
        "inline": true,
        "stack": "small:medium:small"
      },
      "options": [
        "SHA1",
        "SHA2"
      ]
    },
    "signingCert": {
      "controlType": "options",
      "defaultValue": {
        "issuedTo": "No Certificate Selected"
      },
      "width": 12,
      "emptyContent": "noCertificatesAvailable",
      "columns": [
        "issuedTo",
        "issuedBy",
        "expiresOn"
      ],
      "headers": [
        "Issued To",
        "Issued By",
        "Expires"
      ],
      "optionAsValue": true,
      "source": "options:applianceCertificates:certificateOptions"
    },
    "signSamlAssertion": {
      "states": "Sign SAML Assertion",
      "controlType": "switch",
      "defaultValue": false
    },
    "signSamlMessage": {
      "states": "Sign SAML Message",
      "controlType": "switch",
      "defaultValue": true
    },
    "spLoginUrl": {
      "label": "Figma Login URL",
      "controlType": "input",
      "extras": "spLoginUrlTooltip",
      "extrasAt": "field",
      "modify": {
        "initiationTypeSP": {
          "visible": true
        },
        "initiationTypeIdP": {
          "visible": false
        }
      }
    },
    "userIdProfileField": {
      "label": "User ID Profile Field",
      "controlType": "select",
      "description": "Select the profile field in your data store that contains your users' IDs.",
      "width": 7,
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    }
  },
  "statics": {
    "assertionOffsetMinutesTooltip": {
      "content": "This is referred to as \"SAML Not Before\" in the SAML Specification."
    },
    "assertionValidHoursTooltip": {
      "content": "This is the time period in which a SAML Assertion is valid. It is referred to as \"SAML Not After\" in the SAML Specification."
    },
    "attributeAddButton": {
      "content:n": "&nbsp;&nbsp;Add SAML Attribute",
      "before": "attributeAddIcon",
      "dashed": true,
      "expand": true,
      "clickAction": "attributeItemAdd",
      "modify": {
        "attributeItemDisableAdd": {
          "disabled": true
        },
        "attributeItemEnableAdd": {
          "disabled": false
        }
      },
      "stack": "::small"
    },
    "attributeAddIcon": {
      "icon": "add",
      "size": "medium"
    },
    "attributeCallout": {
      "after": [
        "attributeInfo",
        "attributeNamespace",
        "attributeFormat",
        "attributeFilterGroup"
      ],
      "stack": "::medium"
    },
    "attributeDeleteButton": {
      "content": " Delete Attribute",
      "before": {
        "name": "static:icon",
        "icon": "remove",
        "type": "destructive",
        "size": "medium"
      },
      "type": "destructive",
      "dashed": true
    },
    "attributesHeader": {
      "content": "SAML ATTRIBUTES",
      "small": true,
      "stack": "large"
    },
    "settingsCallout": {
      "after": [
        "applicationSettings"
      ]
    },
    "dataStoresAndGroupsHeader": {
      "content": "USER DATA STORES AND GROUPS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit groups",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "chevronIconRight": {
      "staticType": "icon",
      "icon": "chevron-right",
      "size": "medium",
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "connectionSettingsHeader": {
      "content": "CONNECTION SETTINGS",
      "contentEast": {
        "name": "editIcon",
        "clickAction": {
          "actions": "edit connection",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "appSettingsHeader": {
      "content": "Application Settings",
      "stack": "large"
    },
    "nameForSummary": {
      "content:t": "_.name",
      "staticType": "headline",
      "stack": "small"
    },
    "descriptionForSummary": {
      "content:t": "_.description",
      "staticType": "color",
      "color": "disabled"
    },
    "audienceTooltip": {
      "content": "OPTIONAL CONTENT.",
      "pad": ":::small"
    },
    "encryptSamlAssertionCallout": {
      "after": "encryptSamlAssertionOptions",
      "stack": "small"
    },
    "defaultHeader": {
      "small": true,
      "stack": "large"
    },
    "downloadIcon": {
      "staticType": "icon",
      "icon": "upload",
      "size": "medium"
    },
    "downloadLabel": {
      "staticType": "text",
      "content": " Upload"
    },
    "editIcon": {
      "icon": "pencil",
      "size": "medium"
    },
    "idpSigningCertificateDownloadDesc": {
      "staticType": "color",
      "color": "disabled",
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "wrappers": "body",
      "pad": "small"
    },
    "idpSigningCertificateDownloadHeader": {
      "staticType": "label",
      "content": "Idp Signing Certificate"
    },
    "idpDownloadCertificateAction": {
      "staticType": "link",
      "content": " Download",
      "className": "sa-vertical-align-middle",
      "before": {
        "name": "static:icon",
        "icon": "download",
        "size": "small"
      },
      "clickAction": {
        "actions": "download certificate",
        "sendToParent": true
      }
    },
    "initiationByTooltip": {
      "content": "The SAML specification allows for SPs to send their authentication requests (AuthnRequest) to the IdP either by HTTP Post or HTTP Redirect. Your SP’s configuration or metadata will tell you what is used for the authentication request.",
      "inline": true,
      "width": "medium",
      "pad": ":::small"
    },
    "initiationTypeInfo": {
      "staticType": "fieldset",
      "content": " - ",
      "before": [
        "initiationTypeLabel",
        {
          "name": "initiationType",
          "noFieldset": true,
          "inline": true
        }
      ],
      "after": {
        "name": "initiationBy",
        "inline": true
      }
    },
    "initiationTypeLabel": {
      "content": "Connection Type"
    },
    "loginUrlLink": {
      "staticType": "link",
      "content:t": "_.loginURL",
      "href:t": "_.loginURL",
      "target": "_blank"
    },
    "providersCalloutLabel": {
      "staticType": "color",
      "content": "Info for service providers",
      "after": "chevronIconRight",
      "style": {
        "cursor": "pointer"
      },
      "clickAction": {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "providersCalloutHeader": {
      "staticType": "color",
      "color": "info",
      "after": [
        "providersCalloutLabel"
      ]
    },
    "providersCalloutDescription": {
      "content": "Idp URLs, certificates and metadata files used for integrating with Service Providers.",
      "staticType": "color"
    },
    "providersCallout": {
      "type": "info",
      "after": [
        "providersCalloutHeader",
        "providersCalloutDescription"
      ]
    },
    "recipientTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "relayStateTooltip": {
      "content": "OPTIONAL CONTENT",
      "pad": ":::small"
    },
    "realmInfo": {
      "content:im": "**Realm:** Secureauth %{_.realmNumber}",
      "color": "disabled",
      "staticType": "color"
    },
    "settingsHeader": {
      "content": "CONFIGURE CONNECTION",
      "small": true,
      "stack": "large"
    },
    "signingCertAcceptButton": {
      "content": "Select",
      "clickAction": "signingCertModalAccept"
    },
    "signingCertLink": {
      "content:n": "Select&nbsp;Certificate",
      "clickAction": "signingCertModalOpen"
    },
    "signingCertName": {
      "content:in": "%{_.signingCertOptions.signingCert.issuedTo}&nbsp;&nbsp;&nbsp;",
      "staticType": "body",
      "after": "signingCertLink"
    },
    "signingCertNameFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate",
          "inline": true,
          "pad": ":small"
        },
        {
          "name": "other:importance",
          "inline": true
        },
        "signingCertName"
      ]
    },
    "signingCertSerialNo": {
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "staticType": "body"
    },
    "signingCertSerialNoFieldset": {
      "after": [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate Serial Number"
        },
        "signingCertSerialNo",
        "signingCertCopy"
      ],
      "stack@providersInfo": "medium"
    },
    "spLoginUrlTooltip": {
      "content": "The URL for your users to log into your Figma instance.",
      "pad": ":::small"
    }
  },
  "layouts": {
    "applicationInputs": {
      "layoutType": "layout",
      "boxWidth": 6,
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "applicationInfo": [
          "applicationName",
          "applicationDescription"
        ]
      }
    },
    "applicationSettings": {
      "layoutType": "layout",
      "columns": {
        "imageUpload": {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "appSummary": [
          "nameForSummary",
          "descriptionForSummary",
          "loginUrlLink",
          "realmInfo"
        ],
        "edition": {
          "width": "auto",
          "order": [
            {
              "name": "editIcon",
              "clickAction": {
                "actions": "edit details",
                "sendToParent": true
              }
            }
          ]
        }
      }
    },
    "attributeInfo": {
      "layoutType": "grid",
      "columns": {
        "attributeProfile": {
          "small": 8,
          "order": [
            "attributeNumber",
            "attributeName",
            "attributeProfileField"
          ]
        },
        "attributeActions": {
          "align": "right",
          "order": "attributeDeleteTooltipConfirm"
        }
      }
    }
  },
  "others": {
    "attributeDeleteTooltipConfirm": {
      "trigger": "attributeDeleteButton",
      "message": "Are you sure you want to delete this attribute?",
      "action:i": "attributeItemDelete%{local.name}",
      "placement": "top-end"
    },
    "idpIssuerCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.issuer",
      "stack": "medium"
    },
    "loginUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.loginURL"
    },
    "logoutUrlCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.logoutURL"
    },
    "noCertificatesAvailable": {
      "otherType": "statemessage",
      "message": "There are no certificates available on the SecureAuth appliance.",
      "info": "Certificates must be managed and uploaded using the Windows Certificates Console on this appliance."
    },
    "noSAMLAttributes": {
      "otherType": "statemessage",
      "message": "Add SAML Attributes for your connection",
      "modify": {
        "attributeItemEmpty": {
          "visible": true
        },
        "attributeItemNotEmpty": {
          "visible": false
        }
      }
    },
    "signingCertCopy": {
      "otherType": "copytoclipboard",
      "copy:t": "_.signingCertOptions.signingCert.serialNo"
    }
  },
  "windows": {
    "signingCertModal": {
      "title": "Select Certificate",
      "body": "signingCert",
      "footer": "signingCertAcceptButton",
      "closeButton": "Cancel",
      "size": "large",
      "modify": {
        "signingCertModalAccept": {
          "isOpened": false
        },
        "signingCertModalClose": {
          "isOpened": false
        },
        "signingCertModalOpen": {
          "isOpened": true
        }
      }
    }
  },
  "validation": {
    "requireSigningCert": {
      "constrain": {
        "signingCert": "is.required"
      },
      "nested": {
        "signingCert": {
          "constrain": {
            "serialNo": "is.required"
          }
        }
      }
    }
  },
  "groups": {
    "attributeItem": {
      "logical": true,
      "dataModelName": "attributes",
      "repeat": {
        "min": 1,
        "max": 10,
        "name": "mail,username,displayName,title,userName"
      },
      "order": "attributeCallout"
    },
    "encryptSamlAssertionOptions": {
      "logical": true,
      "order": [
        "dataEncryptionMethod",
        "keyEncryptionMethod"
      ]
    },
    "assertionWillBeValid": {
      "inline": true,
      "order": [
        {
          "name": "static:label",
          "content": "Assertion will be valid for:"
        },
        "assertionValidHours",
        "assertionValidMinutes"
      ],
      "notify": {
        "minutesAreZero": {
          "value.assertionValidMinutes": "0",
          "value.assertionValidHours": "0"
        }
      }
    },
    "providerUrls": {
      "logical": true,
      "order": [
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Login URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.loginURL"
          }
        },
        "loginUrlCopy",
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Logout URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.logoutURL"
          }
        },
        "logoutUrlCopy"
      ]
    },
    "signSamlElements": {
      "order": [
        "signSamlAssertion",
        "signSamlMessage"
      ]
    },
    "signingCertDownload": {
      "order": [
        "idpSigningCertificateDownloadHeader",
        "idpSigningCertificateDownloadDesc",
        "idpDownloadCertificateAction"
      ],
      "stack": "medium"
    },
    "signingCertOptions": {
      "logical": true,
      "order": [
        "signingCertModal",
        {
          "name": "signingCert",
          "holdValue": "signingCertModalOpen:signingCertModalClose",
          "visible": false
        },
        "signingCertNameFieldset",
        "signingCertSerialNoFieldset",
        "signingAlgorithm"
      ],
      "pad": "::small",
      "validate": "requireSigningCert"
    },
    "templateRoot": {
      "order": [
        "settingsHeader",
        "initiationType",
        "initiationBy",
        {
          "name": "defaultHeader",
          "content": "USER ID MAPPING"
        },
        "userIdProfileField",
        "nameIdFormat",
        "encodeToBase64",
        {
          "name": "defaultHeader",
          "content": "SAML ASSERTION"
        },
        "issuer",
        "assertionConsumerService",
        "relayState",
        "recipient",
        "audience",
        "spLoginUrl",
        "assertionWillBeValid",
        "assertionOffsetMinutes",
        "signingCertOptions",
        "signSamlElements",
        "encryptSamlAssertion",
        "attributesHeader",
        "noSAMLAttributes",
        "attributeAddButton",
        "attributeItem"
      ],
      "order@details": [
        "applicationInputs",
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@summary": [
        "settingsCallout",
        "appSettingsHeader",
        "dataStoresAndGroupsHeader",
        "dataStores",
        "groups",
        "connectionSettingsHeader",
        "initiationTypeInfo",
        "providersCallout"
      ],
      "order@providersInfo": [
        "providerUrls",
        "issuer",
        "idpIssuerCopy",
        "signingCertDownload"
      ],
      "order@updateGroups": [
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@updateDetails": [
        "applicationInputs"
      ]
    }
  },
  "views": {
    "summary": {
      "entries": {
        "displayOnly": true
      }
    }
  },
  "order": [
    "templateRoot"
  ]
}
